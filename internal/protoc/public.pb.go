// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: public.proto

package protoc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicReq) Reset() {
	*x = PublicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicReq) ProtoMessage() {}

func (x *PublicReq) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicReq.ProtoReflect.Descriptor instead.
func (*PublicReq) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{0}
}

type GetCaptchaRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 错误码
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息
	Data    *GetCaptchaRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回数据
}

func (x *GetCaptchaRsp) Reset() {
	*x = GetCaptchaRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaRsp) ProtoMessage() {}

func (x *GetCaptchaRsp) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaRsp.ProtoReflect.Descriptor instead.
func (*GetCaptchaRsp) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{1}
}

func (x *GetCaptchaRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCaptchaRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCaptchaRsp) GetData() *GetCaptchaRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCountryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*GetCountryRsp_Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCountryRsp) Reset() {
	*x = GetCountryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryRsp) ProtoMessage() {}

func (x *GetCountryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryRsp.ProtoReflect.Descriptor instead.
func (*GetCountryRsp) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{2}
}

func (x *GetCountryRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCountryRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCountryRsp) GetData() []*GetCountryRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PublicRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 错误码
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 错误信息
	Data    *PublicRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 返回数据
}

func (x *PublicRsp) Reset() {
	*x = PublicRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRsp) ProtoMessage() {}

func (x *PublicRsp) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRsp.ProtoReflect.Descriptor instead.
func (*PublicRsp) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{3}
}

func (x *PublicRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PublicRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PublicRsp) GetData() *PublicRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point string `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"` // 坐标
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`     // key
}

func (x *PostCaptchaReq) Reset() {
	*x = PostCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCaptchaReq) ProtoMessage() {}

func (x *PostCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCaptchaReq.ProtoReflect.Descriptor instead.
func (*PostCaptchaReq) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{4}
}

func (x *PostCaptchaReq) GetPoint() string {
	if x != nil {
		return x.Point
	}
	return ""
}

func (x *PostCaptchaReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetCaptchaRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaKey  string `protobuf:"bytes,1,opt,name=captcha_key,json=captchaKey,proto3" json:"captcha_key,omitempty"`    // key
	ImageBase64 string `protobuf:"bytes,2,opt,name=image_base64,json=imageBase64,proto3" json:"image_base64,omitempty"` // 背景图片
	TileBase64  string `protobuf:"bytes,3,opt,name=tile_base64,json=tileBase64,proto3" json:"tile_base64,omitempty"`    // 碎片图片
	TileWidth   int32  `protobuf:"varint,4,opt,name=tile_width,json=tileWidth,proto3" json:"tile_width,omitempty"`      // 宽
	TileHeight  int32  `protobuf:"varint,5,opt,name=tile_height,json=tileHeight,proto3" json:"tile_height,omitempty"`   // 高
	TileX       int32  `protobuf:"varint,6,opt,name=tile_x,json=tileX,proto3" json:"tile_x,omitempty"`                  // x坐标
	TileY       int32  `protobuf:"varint,7,opt,name=tile_y,json=tileY,proto3" json:"tile_y,omitempty"`                  // y坐标
}

func (x *GetCaptchaRsp_Data) Reset() {
	*x = GetCaptchaRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaRsp_Data) ProtoMessage() {}

func (x *GetCaptchaRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaRsp_Data.ProtoReflect.Descriptor instead.
func (*GetCaptchaRsp_Data) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetCaptchaRsp_Data) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *GetCaptchaRsp_Data) GetImageBase64() string {
	if x != nil {
		return x.ImageBase64
	}
	return ""
}

func (x *GetCaptchaRsp_Data) GetTileBase64() string {
	if x != nil {
		return x.TileBase64
	}
	return ""
}

func (x *GetCaptchaRsp_Data) GetTileWidth() int32 {
	if x != nil {
		return x.TileWidth
	}
	return 0
}

func (x *GetCaptchaRsp_Data) GetTileHeight() int32 {
	if x != nil {
		return x.TileHeight
	}
	return 0
}

func (x *GetCaptchaRsp_Data) GetTileX() int32 {
	if x != nil {
		return x.TileX
	}
	return 0
}

func (x *GetCaptchaRsp_Data) GetTileY() int32 {
	if x != nil {
		return x.TileY
	}
	return 0
}

type GetCountryRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // id
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                        // 昵称
	ChineseName   string `protobuf:"bytes,3,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name,omitempty"`       // 中文昵称
	StartChar     string `protobuf:"bytes,4,opt,name=start_char,json=startChar,proto3" json:"start_char,omitempty"`             // 开头字符
	TelephoneCode string `protobuf:"bytes,5,opt,name=telephone_code,json=telephoneCode,proto3" json:"telephone_code,omitempty"` // 区号
}

func (x *GetCountryRsp_Data) Reset() {
	*x = GetCountryRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryRsp_Data) ProtoMessage() {}

func (x *GetCountryRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryRsp_Data.ProtoReflect.Descriptor instead.
func (*GetCountryRsp_Data) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GetCountryRsp_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCountryRsp_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCountryRsp_Data) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

func (x *GetCountryRsp_Data) GetStartChar() string {
	if x != nil {
		return x.StartChar
	}
	return ""
}

func (x *GetCountryRsp_Data) GetTelephoneCode() string {
	if x != nil {
		return x.TelephoneCode
	}
	return ""
}

type PublicRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicRsp_Data) Reset() {
	*x = PublicRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRsp_Data) ProtoMessage() {}

func (x *PublicRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRsp_Data.ProtoReflect.Descriptor instead.
func (*PublicRsp_Data) Descriptor() ([]byte, []int) {
	return file_public_proto_rawDescGZIP(), []int{3, 0}
}

var File_public_proto protoreflect.FileDescriptor

var file_public_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0b, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x22, 0xc8, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xd9, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x69, 0x6c, 0x65, 0x58, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x59, 0x22, 0x82, 0x02,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x93, 0x01, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x6c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x38, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x32, 0xb2, 0x01, 0x0a, 0x06, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42,
	0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_public_proto_rawDescOnce sync.Once
	file_public_proto_rawDescData = file_public_proto_rawDesc
)

func file_public_proto_rawDescGZIP() []byte {
	file_public_proto_rawDescOnce.Do(func() {
		file_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_proto_rawDescData)
	})
	return file_public_proto_rawDescData
}

var file_public_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_public_proto_goTypes = []any{
	(*PublicReq)(nil),          // 0: proto.PublicReq
	(*GetCaptchaRsp)(nil),      // 1: proto.GetCaptchaRsp
	(*GetCountryRsp)(nil),      // 2: proto.GetCountryRsp
	(*PublicRsp)(nil),          // 3: proto.PublicRsp
	(*PostCaptchaReq)(nil),     // 4: proto.PostCaptchaReq
	(*GetCaptchaRsp_Data)(nil), // 5: proto.GetCaptchaRsp.Data
	(*GetCountryRsp_Data)(nil), // 6: proto.GetCountryRsp.Data
	(*PublicRsp_Data)(nil),     // 7: proto.PublicRsp.Data
}
var file_public_proto_depIdxs = []int32{
	5, // 0: proto.GetCaptchaRsp.data:type_name -> proto.GetCaptchaRsp.Data
	6, // 1: proto.GetCountryRsp.data:type_name -> proto.GetCountryRsp.Data
	7, // 2: proto.PublicRsp.data:type_name -> proto.PublicRsp.Data
	0, // 3: proto.Public.GetCaptcha:input_type -> proto.PublicReq
	4, // 4: proto.Public.PostCaptcha:input_type -> proto.PostCaptchaReq
	0, // 5: proto.Public.GetCountry:input_type -> proto.PublicReq
	1, // 6: proto.Public.GetCaptcha:output_type -> proto.GetCaptchaRsp
	3, // 7: proto.Public.PostCaptcha:output_type -> proto.PublicRsp
	2, // 8: proto.Public.GetCountry:output_type -> proto.GetCountryRsp
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_public_proto_init() }
func file_public_proto_init() {
	if File_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PublicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetCaptchaRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PublicRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PostCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetCaptchaRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountryRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PublicRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_proto_goTypes,
		DependencyIndexes: file_public_proto_depIdxs,
		MessageInfos:      file_public_proto_msgTypes,
	}.Build()
	File_public_proto = out.File
	file_public_proto_rawDesc = nil
	file_public_proto_goTypes = nil
	file_public_proto_depIdxs = nil
}
